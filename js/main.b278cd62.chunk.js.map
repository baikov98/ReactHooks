{"version":3,"sources":["routes/index.ts","styles/Colors.ts","components/organisms/Main/styles.ts","pages/MainPage.tsx","components/organisms/Main/index.tsx","layouts/MainLayout/styles.ts","layouts/MainLayout/index.tsx","components/organisms/Header/styles.ts","components/atoms/ButtonItem/styles.ts","components/atoms/ButtonItem/index.tsx","components/organisms/SignIn/styles.ts","constants/index.ts","components/atoms/InputItem/styles.ts","components/atoms/InputItem/index.tsx","components/organisms/SignIn/index.tsx","components/organisms/Header/index.tsx","components/organisms/SignUp/styles.ts","components/organisms/SignUp/index.tsx","pages/Auth/SignUpPage.tsx","components/organisms/ForgetPass/styles.ts","components/organisms/ForgetPass/index.tsx","pages/Auth/ForgetPassPage.tsx","components/organisms/StartChange/styles.ts","components/atoms/ProgressIndicator/styles.ts","components/atoms/ProgressIndicator/index.tsx","pages/StartChangePage.tsx","components/organisms/StartChange/index.tsx","components/organisms/Feedback/styles.ts","pages/FeedbackPage.tsx","components/organisms/Feedback/index.tsx","routes/AppRoutes/index.tsx","App.tsx","reportWebVitals.ts","store/models/menu.ts","store/models/index.ts","store/models/authState.ts","store/models/regFields.ts","store/index.ts","index.tsx"],"names":["routes","main","start","userChange","feedback","signup","forgetPass","Colors","bg","text","textActive","textGray","white","orange","red","useStyles","makeStyles","root","color","overflow","width","wrapper","background","minHeight","padding","index","Main","classes","useHistory","Box","className","Typography","mainWrapper","display","flexGrow","flexDirection","flexWrap","alignItems","header","height","backgroundColor","content","MainLayout","props","children","Grid","container","component","item","justifyContent","margin","loginMenu","regButton","paddingLeft","nav","link","marginRight","cursor","textActiveColor","textBold","fontWeight","textNormal","ButtonItem","btnType","btnColor","disabled","onClick","variant","size","classText","cn","Button","disableTouchRipple","disableRipple","type","paper","borderRadius","close","closeIcon","fill","fontSize","letterSpacing","form","marginTop","inputWrapper","textRow","socialBox","btn","forgetText","textAlign","textDecoration","VALIDATION","SIGN_IN","yup","shape","email","matches","required","password","trim","max","SIGN_UP","confirmPassword","input","border","error","inputLabel","inputBox","marginLeft","InputItem","placeholder","label","defaultValue","onChange","errorText","value","inputType","inputClass","TextField","InputProps","disableUnderline","helperText","noWrap","defaultProps","SignIn","open","closeModal","history","useForm","resolver","yupResolver","handleSubmit","control","errors","reset","clearErrors","setError","register","onClose","Dialog","scroll","aria-labelledby","aria-describedby","onBackdropClick","onEscapeKeyDown","DialogContent","onSubmit","data","console","log","name","rules","render","message","push","getList","state","menu","list","Header","useState","showSignIn","setShowSignIn","useSelector","length","map","str","title","e","preventDefault","subtitle","marginBottom","inputRow","gridTemplateColumns","gridGap","getMainInput","regFields","getAdressInput","adress","SignUp","mainInput","adressInput","Checkbox","SignUpPage","outline","ForgetPass","ForgetPassPage","stepper","formBox","categoryBox","btnBox","mainBox","line","wishes","num","ProgressIndicator","number","StartChange","Feedback","AppRoutes","MainPage","exact","path","StartChangePage","FeedbackPage","App","CssBaseline","Container","maxWidth","disableGutters","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createModel","reducers","effects","dispatch","models","authState","auth","SET_AUTH_STATE","loadData","payload","rootState","store","init","plugins","redux","middlewares","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b278cd62.chunk.js","sourcesContent":["const mainRoutes = {\r\n    main: \"/\",\r\n    start: \"/start\",\r\n    userChange: \"/userChange\",\r\n    feedback: \"/feedback\",\r\n    signup: \"/signUp\",\r\n    forgetPass: \"/forgetPass\"\r\n  };\r\n  \r\n  const authRoutes = {\r\n  };\r\n  \r\n  export const routes = { ...mainRoutes, ...authRoutes };\r\n  \r\n  const mainLinks = {\r\n    main: \"/\",\r\n    start: () => \"/start\",\r\n    userChange: () => \"/userChange\",\r\n    feedback: () => \"/feedback\",\r\n    signup: () => \"/signUp\",\r\n    forgetPass: () => \"/forgetPass\",\r\n  };\r\n  \r\n  export default mainLinks;","export const Colors: {[index: string]: string } = {\r\n    bg: \"#F1F1F1\",\r\n    text: '#3E3838',\r\n    textActive: '#F4B862',\r\n    textGray: '#A5A3B0',\r\n    white: '#FAFBFD',\r\n    orange: '#DC975E',\r\n    red: '#f00',\r\n   };\r\n   ","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Colors } from \"../../../styles/Colors\";\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    color: Colors.text,\r\n    overflow:\"auto\",\r\n    width:\"100%\"\r\n  },\r\n  wrapper:{\r\n    background: Colors.white,\r\n    minHeight: 500,\r\n    padding: 24,\r\n  },  \r\n}, {index: 3});\r\n","import React from \"react\";\r\nimport Main from \"../components/organisms/Main\";\r\n\r\nexport default Main\r\n","import React from \"react\";\r\n\r\nimport { useStyles } from \"./styles\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Main: React.FC = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.wrapper}>\r\n        <Typography>Change Books- сервис обмена книгами</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Colors } from \"../../styles/Colors\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    mainWrapper:{\r\n        display: \"flex\",\r\n        flexGrow: 1,\r\n        flexDirection: \"column\",\r\n        flexWrap: \"nowrap\",\r\n        alignItems: \"center\",\r\n    },\r\n    header:{\r\n        height: 70,\r\n        width: \"100%\",\r\n        backgroundColor: Colors.orange,\r\n    },\r\n    content: {\r\n        display: \"flex\",\r\n        width: 1080,\r\n\r\n    }\r\n\r\n}))","import React, { ReactChild } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useStyles } from \"./styles\";\r\n\r\ninterface IProps {\r\n  header: ReactChild;\r\n}\r\n\r\nconst MainLayout: React.FC<IProps> = (props) => {\r\n  const { header, children } = props;\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container component={\"div\"} className={classes.mainWrapper}>\r\n      <Grid item container className={classes.header} component={\"div\"}>\r\n        {header}\r\n      </Grid>\r\n      <Grid item className={classes.content} component={\"div\"}>\r\n        {children}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Colors } from \"../../../styles/Colors\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    root:{\r\n        width: 1080,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"0 16px\",\r\n        margin: \"0 auto\",\r\n    },\r\n    loginMenu: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    regButton: {\r\n        paddingLeft: \"0.5rem\",\r\n    },\r\n    nav:{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    link:{\r\n        marginRight: 16,\r\n        cursor: \"pointer\",\r\n    },\r\n    \r\n}), { index: 2 });\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport { Colors } from '../../../styles/Colors'\r\n\r\nexport const useStyles = makeStyles({\r\n    bg: { backgroundColor: Colors.bg},\r\n    text: { backgroundColor: Colors.text},\r\n    textActive: { backgroundColor: Colors.textActiveColor},\r\n    textGray: { backgroundColor: Colors.textGray},\r\n    white: { backgroundColor: Colors.white},\r\n    orange: { backgroundColor: Colors.orange},\r\n\r\n    textBold: { fontWeight: \"bold\" },\r\n    textNormal: { fontWeight: \"normal\"}\r\n})","import React from \"react\";\r\nimport cn from \"classnames\";\r\nimport { Button, ButtonBase, Typography } from \"@material-ui/core\";\r\n\r\nimport { useStyles } from \"./styles\";\r\n\r\ninterface IProps {\r\n    btnType?: \"button\" | \"submit\" | \"reset\";\r\n    variant?: \"contained\" | \"outlined\";\r\n    size?: \"small\" | \"medium\" | \"large\";\r\n    className?: string;\r\n    btnColor?: \"bg\" | \"text\" | \"textActive\" | \"textGray\" | \"white\" | \"orange\";\r\n    fontWeight?: \"textBold\" | \"textNormal\";\r\n    disabled?: boolean;\r\n    onClick?: (event: React.MouseEvent<HTMLElement>) => void;\r\n}\r\n\r\n\r\nconst ButtonItem: React.FC<IProps> = (props) => {\r\n    const { btnType, className, btnColor, fontWeight, disabled, onClick, variant, size, children } = props\r\n    const classes = useStyles()\r\n\r\n    const classText = cn(\r\n        className, classes[btnColor || \"bg\"]\r\n    )\r\n    \r\n    return (\r\n        <Button\r\n                disableTouchRipple\r\n                disableRipple\r\n                type={btnType}\r\n                className={classText}\r\n                disabled={disabled}\r\n                onClick={onClick}\r\n                variant={variant}\r\n                size={size}>\r\n            <Typography variant={\"subtitle1\"} className={classes[fontWeight || \"textNormal\"]}>\r\n                {children}\r\n            </Typography>\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default ButtonItem\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Colors } from \"../../../styles/Colors\";\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n  },\r\n  paper:{\r\n    display: \"flex\",\r\n    width: 425,\r\n    backgroundColor: Colors.white,\r\n    borderRadius: 12,\r\n    flexDirection: \"column\",\r\n    padding: \"0px 0px 24px 0\",\r\n  },\r\n  close:{\r\n    width:'100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  closeIcon: {\r\n    width: 20,\r\n    height: 20,\r\n    fill: Colors.textGray,\r\n    cursor:\"pointer\",\r\n  },\r\n  text:{\r\n      color: Colors.text,\r\n      fontSize:20,\r\n      fontWeight: 700,\r\n      letterSpacing: 2,\r\n  },\r\n  form:{\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-between\",\r\n      marginTop: 32,\r\n  },\r\n  inputWrapper:{\r\n      width: \"100%\",\r\n  },\r\n  textRow:{\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    marginTop: 18,\r\n  },\r\n  socialBox:{\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center'\r\n  },\r\n  btn:{\r\n    marginTop: 32,\r\n    padding: '16px 0px'\r\n  },\r\n  forgetText:{\r\n      color: Colors.textGray,\r\n      fontSize: 12,\r\n      textAlign: \"center\",\r\n      marginTop: 12,\r\n      '&:hover':{\r\n          textDecoration: \"underline\",\r\n          cursor: \"pointer\",\r\n      }\r\n  },\r\n  \r\n}, {index: 3});\r\n","import * as yup from \"yup\";\r\n\r\nexport const VALIDATION = {\r\n    SIGN_IN: yup.object().shape({\r\n        email: yup\r\n        .string()\r\n        .matches(/^(([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}){0,1}$/, \"Email не корректен \")\r\n        .required(\"Email обязательное поле\"),\r\n        password: yup.string().trim().max(64).required('Вы не указали пароль'),\r\n    }),\r\n    SIGN_UP: yup.object().shape({\r\n        email: yup\r\n        .string()\r\n        .matches(/^(([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}){0,1}$/, \"Email не корректен \")\r\n        .required(\"Email обязательное поле\"),\r\n        password: yup.string().trim().max(64).required('Вы не указали пароль'),\r\n        confirmPassword: yup.string().trim().max(64).required('Нужно повторить пароль'),\r\n    }),\r\n}   ","import { makeStyles } from '@material-ui/core/styles'\r\nimport { Colors } from '../../../styles/Colors'\r\nimport { IProps } from \"./index\";\r\n\r\nexport const useStyles =  makeStyles(() => ({\r\n    input:{\r\n        width: \"100%\",\r\n        marginTop: 12,\r\n        border: ({error}: IProps) => error ? `1px solid ${Colors.red}`: `1px solid #eee`,\r\n        padding: 12,\r\n    },\r\n    inputLabel:{\r\n      fontSize: 14,\r\n      color: Colors.text,\r\n      fontWeight: 700,\r\n    },\r\n    inputBox:{\r\n      marginTop: 12,\r\n    },\r\n    error: {\r\n      color: Colors.red,\r\n      fontSize: 12,\r\n      fontWeight: 500,\r\n      marginLeft: 8,\r\n    },\r\n}), {index:1});","import React from \"react\";\r\nimport cn from \"classnames\";\r\nimport { Box, Typography, TextField } from \"@material-ui/core\";\r\n\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport interface IProps {\r\n    placeholder?: string\r\n    label?: string\r\n    defaultValue?: string\r\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\r\n    errorText?: string\r\n    value?: string \r\n    inputType?: string\r\n    className?: string\r\n    error?: string\r\n}\r\n\r\nconst defaultProps: IProps = {\r\n    inputType: 'text',\r\n    onChange: () => null,\r\n}\r\n\r\n\r\nconst InputItem: React.FC<IProps> = (props: IProps) => {\r\n    const {placeholder, label, defaultValue, onChange, error, errorText, value,inputType, className } = props\r\n    const classes = useStyles(props)\r\n\r\n    const inputClass = cn(classes.input, className)\r\n    return (\r\n        <Box className={classes.inputBox}>\r\n                {label && (\r\n                    <Typography className={classes.inputLabel}>\r\n                        {label}\r\n                    </Typography>\r\n                )}\r\n                <TextField\r\n                  InputProps={{ disableUnderline: true }}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  defaultValue = {defaultValue}\r\n                  className={inputClass}\r\n                  type={inputType}\r\n                  placeholder={placeholder}\r\n                  helperText={errorText}\r\n                />\r\n                {error && (\r\n                    <Typography noWrap className={classes.error}>\r\n                        {`* ${error}`}\r\n                    </Typography>\r\n                )}\r\n        </Box>\r\n    )\r\n}\r\nInputItem.defaultProps = defaultProps\r\nexport default InputItem\r\n","import React, { useState } from \"react\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { Typography, Box } from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { VALIDATION } from \"../../../constants\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ButtonItem from \"../../atoms/ButtonItem\";\r\nimport InputItem from \"../../atoms/InputItem\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\ntype IFormInput = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nexport interface IProps {\r\n  open: boolean;\r\n  closeModal: (e: boolean) => void;\r\n}\r\n\r\nconst SignIn: React.FC<IProps> = (props) => {\r\n  const { open, closeModal } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    errors,\r\n    reset,\r\n    setError,\r\n    register,\r\n    clearErrors,\r\n  } = useForm<IFormInput>({\r\n    resolver: yupResolver(VALIDATION.SIGN_IN)\r\n  });\r\n\r\n  const onClose = () => {\r\n    reset();\r\n    closeModal(false);\r\n  };\r\n\r\n  const submit = (data: IFormInput) => {\r\n    console.log(\"Form is submited\", data);\r\n    clearErrors();\r\n    reset();\r\n  };\r\n\r\n  const handleForgetClick = () => {\r\n    closeModal(false)\r\n    history.push('/forgetPass')\r\n  };\r\n \r\n  return (\r\n    <Dialog\r\n      scroll={\"paper\"}\r\n      open={open}\r\n      aria-labelledby=\"scroll-dialog-title\"\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      classes={{ paper: classes.paper }}\r\n      onBackdropClick={onClose}\r\n      onEscapeKeyDown={onClose}\r\n    >\r\n      <DialogContent classes={{ root: classes.root }}>\r\n        <Box className={classes.close} onClick={onClose}><CloseIcon className={classes.closeIcon}/></Box>\r\n        <Typography className={classes.text}>Вход в систему:</Typography>\r\n\r\n        <form className={classes.form} onSubmit={handleSubmit(submit)}>\r\n          <Box className={classes.inputWrapper}>\r\n            <Controller\r\n              name=\"email\"\r\n              control={control}\r\n              rules={{ required: true }}\r\n              defaultValue=\"\"\r\n              render={({ onChange, value }) => (\r\n                <InputItem \r\n                  label = {\"Email *\"}\r\n                  error={errors.email?.message}\r\n                  onChange ={onChange}\r\n                  value={value}\r\n                  placeholder = 'example@example.com'\r\n                />\r\n              )}\r\n            />\r\n            <Controller\r\n              name=\"password\"\r\n              control={control}\r\n              rules={{ required: true }}\r\n              defaultValue=\"\"\r\n              render={({ onChange, value }) => (\r\n                <InputItem \r\n                  label = {\"Пароль *\"}\r\n                  onChange ={onChange}\r\n                  value={value}\r\n                  error={errors.password?.message}\r\n                  inputType = {\"password\"}\r\n                  placeholder = 'Введите пароль'\r\n                />\r\n              )}\r\n            />\r\n          </Box>\r\n\r\n          <Box className={classes.textRow}>\r\n            <Typography>Войти с помощью</Typography>\r\n            <Box className={classes.socialBox}>\r\n              VK G FB\r\n            </Box>\r\n          </Box>\r\n\r\n          <ButtonItem\r\n            btnType=\"submit\"\r\n            size=\"large\"\r\n            btnColor=\"orange\"\r\n            className={classes.btn}\r\n          >Войти</ButtonItem>\r\n        </form>\r\n        <Typography className={classes.forgetText} onClick={handleForgetClick}>\r\n          Забыли пароль?\r\n        </Typography>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useState } from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport ButtonItem from \"../../atoms/ButtonItem\";\r\nimport SignIn from \"../SignIn\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../store\";\r\nimport { IMenuItem } from \"../../../store/models/menu\";\r\n\r\nconst getList = (state:RootState) => {\r\n  return state.menu.list\r\n}\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [showSignIn, setShowSignIn] = useState(false);\r\n  const history = useHistory();\r\n  const menu = useSelector(getList);\r\n  \r\n  const handleSignIn = () => {\r\n    setShowSignIn(true);\r\n  };\r\n\r\n  const handlerClick = (str: string) => {\r\n    history.push(str);\r\n  };\r\n\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography> Change Books Logo</Typography>\r\n      <Box className={classes.nav}>\r\n      {!!menu.length &&\r\n          menu.map((item:IMenuItem, index:number) => (\r\n            <Typography \r\n            key={`menus-${index}-link`}\r\n            className={classes.link}\r\n            onClick={() => handlerClick(`${item.link}`)} > \r\n              {item.title} \r\n            </Typography>\r\n            ))}\r\n      </Box>\r\n      <Box className={classes.loginMenu}>\r\n        <ButtonItem\r\n          variant=\"outlined\"\r\n          size=\"large\"\r\n          btnColor=\"white\"\r\n          fontWeight=\"textBold\"\r\n          onClick={handleSignIn}\r\n        > Войти</ButtonItem>\r\n        <Box className={classes.regButton}>\r\n          <ButtonItem\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            btnColor=\"orange\"\r\n            fontWeight=\"textBold\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              history.push(\"/signup\");\r\n            }}\r\n          >Регистрация</ButtonItem>\r\n        </Box>\r\n      </Box>\r\n      <SignIn open={showSignIn} closeModal={setShowSignIn} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Colors } from \"../../../styles/Colors\";\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    color: Colors.text,\r\n    overflow: 'auto',\r\n    width: '100%'\r\n  },\r\n  wrapper:{\r\n    background: Colors.white,\r\n    minHeight: 500,\r\n    padding: 24,\r\n  },\r\n  title:{\r\n    fontSize: 18,\r\n    color: Colors.text,\r\n    fontWeight: 700,\r\n  },\r\n  subtitle:{\r\n    color: Colors.textGray,\r\n    marginBottom: 16,\r\n    marginTop: 24,\r\n  },\r\n  form:{\r\n    marginTop: 12,\r\n  },\r\n  inputRow:{\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr 1fr 1fr 1fr',\r\n    gridGap: 18,\r\n    marginBottom: 32,\r\n  },\r\n  textRow:{\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    marginTop: 18,\r\n  },\r\n  socialBox:{\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center'\r\n  },\r\n  btn:{\r\n    marginTop:32,\r\n    padding: '12px 60px',\r\n    fontWeight: 700,\r\n  },\r\n  \r\n}, {index: 3});\r\n","import { Box, Typography, TextField, Checkbox } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport cn from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {Controller, useForm} from 'react-hook-form'\r\nimport ButtonItem from \"../../atoms/ButtonItem\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../store\";\r\nimport {IRegFields} from '../../../store/models/regFields'\r\nimport InputItem from \"../../atoms/InputItem\";\r\n\r\ntype IFormInput = {\r\n  name: string;\r\n  secondName: string;\r\n  thirdName: string;\r\n  nickname: string;\r\n  email: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n  indexLocation: string;\r\n  city: string;\r\n  street: string;\r\n  homeNumber: string;\r\n  buildNumber: string;\r\n  flatNumber: string;\r\n  terms: boolean;\r\n};\r\n\r\ninterface IProps {}\r\n\r\n\r\nconst getMainInput = (state: RootState) => {\r\n  return state.regFields.main\r\n}\r\nconst getAdressInput = (state: RootState) => {\r\n  return state.regFields.adress\r\n}\r\n\r\nconst SignUp: React.FC<IProps> = (props) => {\r\n  const {} = props;\r\n  const classes = useStyles();\r\n  const mainInput = useSelector(getMainInput)\r\n  const adressInput = useSelector(getAdressInput);\r\n\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    errors,\r\n    reset,\r\n    setError,\r\n    clearErrors,\r\n  } = useForm<IFormInput>({});\r\n\r\n\r\n  const submit = (data: IFormInput) => {\r\n    console.log(\"Submitted = \", data)\r\n    reset();\r\n  }\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.wrapper}>\r\n        <Typography className={classes.title}>Регистрация:</Typography>\r\n        <Typography className={classes.subtitle}>Основная информация</Typography>\r\n\r\n        <form className={classes.form} onSubmit={handleSubmit(submit)}>\r\n          <Box className={classes.inputRow}>\r\n            {mainInput.map((item: IRegFields, index:number) => (\r\n              <Controller\r\n              key={`input-${index}`}\r\n              name={item.name}\r\n              control={control}\r\n              rules={{ required: item.required }}\r\n              defaultValue=\"\"\r\n              render={(props) => (\r\n                <InputItem\r\n                  label={item.label}\r\n                  inputType={item.type}\r\n                  placeholder={item.placeholder}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n            ))}\r\n          </Box>\r\n\r\n          <Typography className={classes.subtitle}>Адрес</Typography>\r\n          <Box className={classes.inputRow}>\r\n          {adressInput.map((item: IRegFields, index:number) => (\r\n              <Controller\r\n              key={`input-adress-${index}`}\r\n              name={item.name}\r\n              control={control}\r\n              rules={{ required: item.required }}\r\n              defaultValue=\"\"\r\n              render={(props) => (\r\n                <InputItem\r\n                  label = {item.label}\r\n                  placeholder={item.placeholder}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n            ))}\r\n          </Box>\r\n          <Box className={classes.textRow}>\r\n            <Typography>Зарегистрироваться с помощью</Typography>\r\n            <Box className={classes.socialBox}>\r\n              VK G FB\r\n            </Box>\r\n          </Box>\r\n          <Box className={classes.textRow}>\r\n            <Typography>Знаком * отмечены все поля, обязательные для заполнения</Typography>\r\n          </Box>\r\n          <Box className={classes.textRow}>\r\n            <Typography>На указанный вами e-mail будет отправлено письмо для подтверждения учётной записи</Typography>\r\n          </Box>\r\n          <Box className={classes.textRow}>\r\n          <Controller\r\n              name=\"terms\"\r\n              control={control}\r\n              rules={{ required: true }}\r\n              defaultValue=\"\"\r\n              render={(props) => (\r\n                <Checkbox\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n            <Typography>Нажимая кнопку \"СОЗДАТЬ АККАУНТ\" вы соглашаетесь с полититкой хранения и обработки персональных данных \r\n              в соответствии с политикой конфиденциальности данных\r\n            </Typography>\r\n          </Box>\r\n          \r\n\r\n          <ButtonItem\r\n            btnType=\"submit\"\r\n            size=\"large\"\r\n            btnColor=\"orange\"\r\n            className={classes.btn}\r\n          >Создать аккаунт</ButtonItem>\r\n        </form>\r\n        \r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport SignUp from \"../../components/organisms/SignUp\";\r\n\r\nconst SignUpPage = () => {\r\n  return <SignUp />;\r\n};\r\n\r\nexport default SignUpPage;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Colors } from \"../../../styles/Colors\";\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    color: Colors.text,\r\n    overflow: 'auto',\r\n    width: '100%'\r\n  },\r\n  wrapper:{\r\n    background: Colors.white,\r\n    minHeight: 500,\r\n    padding: 24,\r\n  },\r\n  title:{\r\n    fontSize: 18,\r\n    color: Colors.text,\r\n    fontWeight: 700,\r\n  },\r\n  form:{\r\n    marginTop: 12,\r\n  },\r\n  inputRow:{\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr 1fr 1fr 1fr',\r\n    gridGap: 18,\r\n    marginBottom: 32,\r\n  },\r\n  input:{\r\n    border: '1px solid #eee',\r\n    padding: '8px 16px',\r\n    outline: 'none',\r\n  },\r\n  textRow:{\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    marginTop: 18,\r\n  },\r\n\r\n  btn:{\r\n    marginTop:32,\r\n    padding: '12px 60px',\r\n    fontWeight: 700,\r\n  },\r\n  \r\n}, {index: 3});\r\n","import { Box, Typography, TextField} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {Controller, useForm} from 'react-hook-form'\r\nimport ButtonItem from \"../../atoms/ButtonItem\";\r\nimport InputItem from '../../atoms/InputItem'\r\n\r\ntype IFormInput = {\r\n  name: string;\r\n};\r\n\r\nconst ForgetPass: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    errors,\r\n    reset,\r\n    setError,\r\n    clearErrors,\r\n  } = useForm<IFormInput>({});\r\n\r\n\r\n  const submit = (data: IFormInput) => {\r\n    console.log(\"Submitted = \", data)\r\n    reset();\r\n  }\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.wrapper}>\r\n        <Typography className={classes.title}>Восстановление пароля:</Typography>\r\n\r\n        <form className={classes.form} onSubmit={handleSubmit(submit)}>\r\n          <Box className={classes.inputRow}>\r\n            <Controller\r\n              name='email'\r\n              control={control}\r\n              rules={{ required: true }}\r\n              defaultValue=\"\"\r\n              render={(props) => (\r\n                <InputItem\r\n                  label={'Email*:'}\r\n                  placeholder=\"Введите свой email\"\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n           \r\n          </Box>\r\n\r\n          <Box className={classes.textRow}>\r\n            <Typography>На указанный вами e-mail будет отправлено письмо для сброса пароля</Typography>\r\n          </Box>\r\n\r\n          <ButtonItem\r\n            btnType=\"submit\"\r\n            size=\"large\"\r\n            btnColor=\"orange\"\r\n            onClick={()=> null}\r\n          >Сбросить пароль</ButtonItem>\r\n        </form>\r\n        \r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ForgetPass;\r\n","import React from \"react\";\r\nimport ForgetPass from \"../../components/organisms/ForgetPass\";\r\n\r\nconst ForgetPassPage = () => {\r\n  return <ForgetPass />;\r\n};\r\n\r\nexport default ForgetPassPage;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Colors } from \"../../../styles/Colors\";\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    color: Colors.text,\r\n    overflow:\"auto\",\r\n    width:\"100%\"\r\n  },\r\n  wrapper:{\r\n    background: Colors.white,\r\n    minHeight: 500,\r\n    padding: 24,\r\n  },\r\n  stepper: {},\r\n  content:{\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr 3fr'\r\n  },\r\n  formBox: {},\r\n  form: {},\r\n  categoryBox:{\r\n    background: Colors.bg,\r\n  },\r\n  btnBox:{\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'flex-end',\r\n    marginTop:24,\r\n  },\r\n  btn:{},\r\n\r\n}, {index: 3});\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport { Colors } from '../../../styles/Colors'\r\n\r\nexport const useStyles = makeStyles({\r\n    container: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    mainBox: {\r\n        \r\n        width: \"796px\",\r\n        height: \"32px\"\r\n    },\r\n    line: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        height: \"2px\",\r\n        width: \"100%\",\r\n        backgroundColor: \"#C4C4C4\",\r\n        \r\n    },\r\n    wishes: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        '&::before': {\r\n            content: \"11\",\r\n            width: \"10px\",\r\n            height: \"10px\",\r\n            backgroundColor: \"#C4C4C4\"\r\n        }\r\n    },\r\n    num: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        border: \"1px solid #C4C4C4\",\r\n        height: \"32px\",\r\n        width: \"32px\",\r\n        borderRadius: \"50%\",\r\n        backgroundColor: Colors.white,\r\n        \r\n    },\r\n   \r\n})","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\ninterface IProps {\r\n    number?: number\r\n}\r\n\r\n\r\nconst ProgressIndicator: React.FC<IProps> = (props) => {\r\n    const { number } = props\r\n    const classes = useStyles()\r\n\r\n    return (\r\n       <Box className={classes.container}>\r\n           <Box className={classes.mainBox}>\r\n                <Box className={classes.line}>\r\n                    <Box className={classes.num}>1</Box>\r\n                    <Box className={classes.num}>2</Box>\r\n                    <Box className={classes.num}>3</Box>\r\n                </Box >\r\n                <Box className={classes.wishes}>\r\n                    \r\n                </Box>\r\n           </Box>\r\n           \r\n       </Box>\r\n          \r\n    )\r\n}\r\n\r\nexport default ProgressIndicator\r\n","import React from \"react\";\r\nimport StartChange from \"../components/organisms/StartChange\";\r\n\r\nexport default StartChange;\r\n","import React from \"react\";\r\n\r\nimport { useStyles } from \"./styles\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport {Controller, useForm} from 'react-hook-form'\r\nimport ButtonItem from \"../../atoms/ButtonItem\";\r\nimport ProgressIndicator from \"../../atoms/ProgressIndicator\"\r\ntype IFormInput = {\r\n  book: string;\r\n  author: string;\r\n  isbn: string;\r\n  year: string;\r\n};\r\n\r\ninterface IProps {}\r\n\r\nconst StartChange: React.FC<IProps> = () => {\r\n  const classes = useStyles();\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    errors,\r\n    reset,\r\n    setError,\r\n    clearErrors,\r\n  } = useForm<IFormInput>({});\r\n\r\n  const submit = () => {\r\n\r\n  }\r\n  \r\n  return (\r\n    <Box className={classes.root}>\r\n      <ProgressIndicator />\r\n      <Box className={classes.wrapper}>\r\n        <Typography>Мои обмены</Typography>\r\n        <Box className={classes.stepper}> Stepper </Box>\r\n        <form className={classes.form}>\r\n        <Box className={classes.content}>\r\n        \r\n        \r\n          <Box className={classes.formBox}>\r\n            <Typography>Данные книги</Typography>\r\n              <Controller\r\n                name=\"author\"\r\n                control={control}\r\n                rules={{ required: true }}\r\n                defaultValue=\"\"\r\n                render={(props) => (\r\n                  <TextField\r\n                  placeholder=\"Фамилия и имя автора\"\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n                <Controller\r\n                name=\"book\"\r\n                control={control}\r\n                rules={{ required: true }}\r\n                defaultValue=\"\"\r\n                render={(props) => (\r\n                  <TextField\r\n                  placeholder=\"Название книги\"\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n                <Controller\r\n                name=\"isbn\"\r\n                control={control}\r\n                rules={{ required: true }}\r\n                defaultValue=\"\"\r\n                render={(props) => (\r\n                  <TextField\r\n                  placeholder=\"ISBN\"\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n                <Controller\r\n                name=\"year\"\r\n                control={control}\r\n                rules={{ required: true }}\r\n                defaultValue=\"\"\r\n                render={(props) => (\r\n                  <TextField\r\n                  placeholder=\"Год издания\"\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n          </Box>\r\n          <Box className={classes.categoryBox}>\r\n              <Typography>Категории</Typography>\r\n          </Box>\r\n        </Box>\r\n        <Box className={classes.btnBox}>\r\n          <ButtonItem\r\n            btnType=\"submit\"\r\n            size=\"large\"\r\n            btnColor=\"orange\"\r\n            className={classes.btn}\r\n          >Далее</ButtonItem>  \r\n        </Box>\r\n      </form>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StartChange;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Colors } from \"../../../styles/Colors\";\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    color: Colors.text,\r\n    overflow:\"auto\",\r\n    width:\"100%\"\r\n  },\r\n  wrapper:{\r\n    background: Colors.white,\r\n    minHeight: 500,\r\n    padding: 24,\r\n  },  \r\n}, {index: 3});\r\n","import React from \"react\";\r\nimport Feedback from \"../components/organisms/Feedback\";\r\n\r\nexport default Feedback;\r\n","import React from \"react\";\r\n\r\nimport { useStyles } from \"./styles\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\ninterface IProps {}\r\n\r\nconst Feedback: React.FC<IProps> = () => {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.wrapper}>\r\n        <Typography>Обратная связь</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Feedback;\r\n","import React from \"react\";\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { routes } from \"../index\";\r\n\r\nimport MainPage from \"../../pages/MainPage\";\r\nimport MainLayout from \"../../layouts/MainLayout\";\r\nimport Header from \"../../components/organisms/Header\";\r\nimport SignUpPage from \"../../pages/Auth/SignUpPage\";\r\nimport ForgetPassPage from \"../../pages/Auth/ForgetPassPage\";\r\nimport StartChangePage from \"../../pages/StartChangePage\";\r\nimport FeedbackPage from \"../../pages/FeedbackPage\";\r\n\r\nconst AppRoutes = () => (\r\n  <MainLayout header={<Header />}>\r\n    <Switch>\r\n      <Route component={MainPage} exact path={routes.main} />\r\n      <Route component={StartChangePage} exact path={routes.start} />\r\n      <Route component={MainPage} exact path={routes.userChange} />\r\n      <Route component={FeedbackPage} exact path={routes.feedback} />\r\n      <Route component={SignUpPage} exact path={routes.signup} />\r\n      <Route component={ForgetPassPage} exact path={routes.forgetPass} />\r\n    </Switch>\r\n  </MainLayout>\r\n);\r\n\r\nexport default AppRoutes;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport AppRoutes from \"./routes/AppRoutes\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./App.css\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n    display: \"flex\",\n    height: \"100vh\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <BrowserRouter>\n      <CssBaseline />\n      <Container\n        maxWidth={false}\n        className={classes.root}\n        disableGutters\n        component={\"div\"}\n      >\n        <AppRoutes />\n      </Container>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createModel } from \"@rematch/core\";\r\nimport { RootModel } from \".\";\r\n\r\nexport interface IMenuItem {\r\n  title: string;\r\n  link: string;\r\n}\r\nconst initialState = {\r\n   list: [\r\n     {\r\n      title: \"Главная\",\r\n      link: \"/\"\r\n     },\r\n     {\r\n      title: \"Начать обмены\",\r\n      link: \"/start\"\r\n     },\r\n     {\r\n      title: \"Мои обмены\",\r\n      link: \"/userChange\"\r\n     },\r\n     {\r\n        title: \"Обратная связь\",\r\n        link: \"/feedback\"\r\n     },\r\n   ]\r\n}\r\n\r\nexport const menu = createModel<RootModel>()({\r\n  state: {\r\n    error: null,\r\n    ...initialState,\r\n  },\r\n  reducers: {\r\n  },\r\n  effects: (dispatch) => ({\r\n  \r\n  }),\r\n});\r\n","import { Models } from '@rematch/core'\r\nimport { menu } from './menu'\r\nimport { authState } from './authState'\r\nimport { regFields } from './regFields'\r\n\r\n\r\nexport interface RootModel extends Models<RootModel> {\r\n    menu: typeof menu;\r\n    authState: typeof authState;\r\n    regFields: typeof regFields;\r\n}\r\n\r\nexport const models: RootModel = { \r\n    menu,\r\n    authState,\r\n    regFields\r\n }","import { createModel} from \"@rematch/core\"\r\nimport { RootModel } from \".\"\r\n\r\ninterface IProps {\r\n    auth: boolean;\r\n}\r\nexport const authState = createModel<RootModel>()({\r\n    state: {\r\n        auth: false\r\n    }as IProps,\r\n    reducers: {\r\n        SET_AUTH_STATE: (state: IProps, auth: boolean) => {\r\n            return {\r\n                auth: auth\r\n            }\r\n        }\r\n    },\r\n    effects: (dispatch) =>  ({\r\n        async loadData(payload, rootState) {\r\n           \r\n            // const response = await fetch('http://example.com/data')\r\n            // const data = await response.json()\r\n           \r\n            // dispatch.SET_AUTH_STATE(data)\r\n          }\r\n    })\r\n})","import { createModel } from \"@rematch/core\";\r\nimport { RootModel } from \".\";\r\n\r\n\r\nexport interface IRegFields {\r\n  name: string;\r\n  required: boolean;\r\n  label: string;\r\n  type: string;\r\n  placeholder: string;\r\n}\r\n\r\nconst initialState = {\r\n   main: [\r\n     {\r\n      name: \"secondName\",\r\n      required: true,\r\n      label: 'Фамилия *',\r\n      type: '',\r\n      placeholder: 'Введите фамилию',\r\n     },\r\n     {\r\n      name: \"name\",\r\n      required: true,\r\n      label: 'Имя *',\r\n      type: '',\r\n      placeholder: 'Введите имя',\r\n     },\r\n     {\r\n      name: \"thirdName\",\r\n      required: false,\r\n      label: 'Отчество',\r\n      type: '',\r\n      placeholder: 'Введите отчество',\r\n     },\r\n     {\r\n      name: \"nickname\",\r\n      required: true,\r\n      label: 'Ник *',\r\n      type: '',\r\n      placeholder: 'Придумайте никнейм',\r\n     },\r\n     {\r\n      name: \"email\",\r\n      required: true,\r\n      label: 'Email*:',\r\n      type: '',\r\n      placeholder: 'Введите Email',\r\n     },\r\n     {\r\n      name: \"password\",\r\n      required: true,\r\n      label: 'Пароль*:',\r\n      type: 'password',\r\n      placeholder: 'Введите пароль',\r\n     },\r\n     {\r\n      name: \"confirmPassword\",\r\n      required: true,\r\n      label: 'Повторный ввод пароля:',\r\n      type: 'password',\r\n      placeholder: 'Подтвердите пароль',\r\n     },\r\n     \r\n   ],\r\n   adress: [\r\n        {\r\n        name: \"indexLocation\",\r\n        required: true,\r\n        label: 'Индекс*:',\r\n        type: '',\r\n        placeholder: 'Введите индекс',\r\n       },\r\n        {\r\n        name: \"city\",\r\n        required: true,\r\n        label: 'Город*:',\r\n        type: '',\r\n        placeholder: 'Введите город',\r\n       },\r\n        {\r\n        name: \"street\",\r\n        required: true,\r\n        label: 'Улица*:',\r\n        type: '',\r\n        placeholder: 'Введите улицу',\r\n       },\r\n        {\r\n        name: \"homeNumber\",\r\n        required: true,\r\n        label: 'Номер дома*:',\r\n        type: '',\r\n        placeholder: 'Номер дома',\r\n       },\r\n        {\r\n        name: \"buildNumber\",\r\n        required: true,\r\n        label: 'Номер корпуса/строения',\r\n        type: '',\r\n        placeholder: 'Номер корпуса/строения',\r\n       },\r\n        {\r\n        name: \"flatNumber\",\r\n        required: true,\r\n        label: 'Номер квартиры',\r\n        type: '',\r\n        placeholder: 'Номер квартиры',\r\n       },\r\n   ],\r\n}\r\n\r\nexport const regFields = createModel<RootModel>()({\r\n  state: {\r\n    error: null,\r\n    ...initialState,\r\n  },\r\n});\r\n","import { init, RematchDispatch, RematchRootState } from \"@rematch/core\";\nimport { models, RootModel } from \"./models\";\n\nconst store = init({\n  models,\n  plugins: [],\n  redux: {\n    middlewares: []\n  },\n});\nexport default store;\n\nexport type Store = typeof store;\nexport type Dispatch = RematchDispatch<RootModel>;\nexport type RootState = RematchRootState<RootModel>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}